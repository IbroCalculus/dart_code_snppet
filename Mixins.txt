Mixins provide a way to reuse a class's code in multiple class hierarchies, allowing a class to inherit methods and state from multiple sources.

It is similar to interface

class Aclass{
  void methodA(){
    print("This is a method from class A");
  }
}


mixin Bclass{							//NB: mixin
  void methodB(){
    print("This is a method from class B");
  }
}


class Cclass extends Aclass with Bclass, Dclass{		// It's usage		
  void methodC(){
    print("This is a method from class C");
  }
}

mixin Dclass{							//NB: mixin
  void methodD(){
    print("This is a method from class D");
  }
}

------------------------

  Cclass cclass1 = Cclass();
  cclass1.methodA();
  cclass1.methodB();
  cclass1.methodC();